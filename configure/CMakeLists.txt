cmake_minimum_required(VERSION 3.15)
project(AlgoTrader)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_POSITION_INDEPENDENT_CODE ON)

# Ensure CMake finds gRPC/protobuf installed in ~/.local
list(APPEND CMAKE_PREFIX_PATH "$ENV{HOME}/.local")

# Include gRPC helper cmake
include(${CMAKE_CURRENT_SOURCE_DIR}/common.cmake)

# Find dependencies
find_package(OpenSSL REQUIRED)
find_package(Protobuf REQUIRED)
find_package(gRPC CONFIG REQUIRED)
find_package(absl CONFIG REQUIRED)

# Proto sources already generated by your build script
set(GRPC_SOURCES
    grpc/orderbook.pb.cc
    grpc/orderbook.grpc.pb.cc
)

# Abseil dependencies
set(ABSL_DEPS
    absl_log_internal_message
    absl_log_internal_check_op  
    absl_log_internal_nullguard
    absl_cord
    absl_cordz_info
    absl_strings
    absl_synchronization
    absl_time
    absl_base
)

# Compiler options
add_definitions(-DASIO_STANDALONE -D_WEBSOCKETPP_CPP11_STL_)
add_compile_options(-Wno-deprecated-declarations)

# Include directories
include_directories(
    ${CMAKE_CURRENT_SOURCE_DIR}/include
    ${CMAKE_CURRENT_SOURCE_DIR}/third_party/websocketpp
    ${CMAKE_CURRENT_SOURCE_DIR}/third_party/asio/include
    ${CMAKE_CURRENT_SOURCE_DIR}/third_party/json
    ${CMAKE_CURRENT_SOURCE_DIR}/grpc
    /usr/include
    )
    
link_directories(/usr/lib)

# Define executable
add_executable(AlgoTrader
    src/main.cpp
    src/WebSocketClient.cpp
    src/trading/Order.cpp
    src/trading/OrderBook.cpp
    src/OrderBookServer.cpp
    ${GRPC_SOURCES}
)

# Link libraries
target_link_libraries(AlgoTrader
    gRPC::grpc++
    gRPC::grpc
    gRPC::gpr
    protobuf::libprotobuf
    OpenSSL::SSL
    OpenSSL::Crypto
    ${ABSL_DEPS}
    pthread
    /usr/lib/x86_64-linux-gnu/libssl.so
    /usr/lib/x86_64-linux-gnu/libcrypto.so
)
